// <auto-generated />
using System;
using Infra.UPX4.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Data.Migrations
{
    [DbContext(typeof(MyContext))]
    partial class MyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.19");

            modelBuilder.Entity("Infra.UPX4.Domain.Entities.PontoDeAcessibilidadeEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("cordx")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("cordy")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("descricaopontodeacessibilidade")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("idicone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("idusuariocriador")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("PontosDeAcessibilidade");
                });

            modelBuilder.Entity("Infra.UPX4.Domain.Entities.UserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("04ae83ff-6d39-42ff-9cef-7ca5a0c8bd92"),
                            CreateAt = new DateTime(2024, 10, 16, 22, 48, 21, 645, DateTimeKind.Local).AddTicks(6972),
                            Email = "adm@mail.com",
                            Name = "Adm",
                            Password = "adm123",
                            UpdatedAt = new DateTime(2024, 10, 16, 22, 48, 21, 645, DateTimeKind.Local).AddTicks(6988)
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
